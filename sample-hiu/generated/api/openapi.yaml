openapi: 3.0.3
info:
  description: This is a set of interfaces based on the OpenAPI 3.0 specification
    for a wrapper client
  title: Swagger HIU Facade - OpenAPI 3.0
  version: 1.0.0
servers:
- url: http://localhost:8082/v1
paths:
  /consent-init:
    post:
      description: Initiates consent request
      operationId: initConsent
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/initConsent_request'
        description: Request body for initiate consent request
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacadeResponse'
          description: OK
        "202":
          description: Request accepted
        "400":
          description: Invalid request body supplied
        "404":
          description: Address not found
        "422":
          description: Validation exception
      summary: Initiates consent request
      tags:
      - consent
      x-content-type: application/json
      x-accepts: application/json
  /consent-status/{requestId}:
    get:
      parameters:
      - description: Request Id of the consent request.
        explode: false
        in: path
        name: requestId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConsentStatusResponse'
          description: OK
        "400":
          description: Invalid request body supplied
        "404":
          description: Address not found
        "422":
          description: Validation exception
      summary: Get status of Consent request.
      tags:
      - consent
      x-accepts: application/json
  /health-information/fetch-records:
    post:
      description: Submits a request to fetch health information
      operationId: fetchHealthInformation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HIUClientHealthInformationRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacadeResponse'
          description: OK
        "202":
          description: Request Accepted
        "400":
          description: Invalid request body supplied
        "404":
          description: Address not found
        "422":
          description: Validation exception
      summary: Submits a request to fetch health information
      tags:
      - data-transfer
      x-content-type: application/json
      x-accepts: application/json
  /health-information/status/{requestId}:
    get:
      parameters:
      - description: Request Id of the health information request.
        explode: false
        in: path
        name: requestId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthInformationResponse'
          description: OK
        "400":
          description: Invalid request body supplied
        "404":
          description: Address not found
        "422":
          description: Validation exception
      summary: Get status of Health Information request.
      tags:
      - data-transfer
      x-accepts: application/json
components:
  schemas:
    ConsentRequest:
      properties:
        purpose:
          $ref: '#/components/schemas/Purpose'
        patient:
          $ref: '#/components/schemas/IdRequest'
        hip:
          $ref: '#/components/schemas/IdRequest'
        careContexts:
          items:
            $ref: '#/components/schemas/ConsentCareContext'
          type: array
        hiu:
          $ref: '#/components/schemas/IdRequest'
        requester:
          $ref: '#/components/schemas/ConsentRequester'
        hiTypes:
          example:
          - OPConsultation
          - Prescription
          items:
            $ref: '#/components/schemas/HiTypeEnum'
          type: array
        permission:
          $ref: '#/components/schemas/Permission'
      required:
      - hiTypes
      - hiu
      - patient
      - permission
      - purpose
      - requester
      type: object
    Purpose:
      properties:
        text:
          type: string
        code:
          type: string
        refUri:
          type: string
      type: object
    IdRequest:
      example:
        id: id
      properties:
        id:
          type: string
      type: object
    ConsentCareContext:
      properties:
        patientReference:
          type: string
        careContextReference:
          type: string
      type: object
    ConsentRequester:
      properties:
        name:
          type: string
        identifier:
          $ref: '#/components/schemas/ConsentRequestIdentifier'
      type: object
    ConsentRequestIdentifier:
      properties:
        type:
          example: REGNO
          type: string
        value:
          example: MH1001
          type: string
        system:
          example: https://www.mciindia.org
          type: string
      type: object
    Frequency:
      properties:
        unit:
          enum:
          - HOUR
          - WEEK
          - DAY
          - MONTH
          - YEAR
          type: string
        value:
          type: integer
        repeats:
          type: integer
      type: object
    FacadeResponse:
      example:
        code: 0
        message: message
        error:
          code: 6
          message: message
        httpStatusCode: httpStatusCode
      properties:
        code:
          type: integer
        httpStatusCode:
          type: string
        message:
          type: string
        error:
          $ref: '#/components/schemas/ErrorResponse'
      type: object
    ErrorResponse:
      example:
        code: 6
        message: message
      properties:
        code:
          type: integer
        message:
          type: string
      type: object
    ConsentStatusResponse:
      example:
        error: error
        consent:
          id: id
          status: status
          consentArtefacts:
          - id: id
          - id: id
        status: status
        httpStatusCode: httpStatusCode
      properties:
        status:
          type: string
        error:
          type: string
        httpStatusCode:
          type: string
        consent:
          $ref: '#/components/schemas/ConsentStatus'
      type: object
    ConsentStatus:
      example:
        id: id
        status: status
        consentArtefacts:
        - id: id
        - id: id
      properties:
        id:
          type: string
        status:
          type: string
        consentArtefacts:
          items:
            $ref: '#/components/schemas/IdRequest'
          type: array
      type: object
    Permission:
      properties:
        accessMode:
          enum:
          - VIEW
          - STORE
          - QUERY
          - STREAM
          type: string
        dateRange:
          $ref: '#/components/schemas/DateRange'
        dataEraseAt:
          description: Data related to this consent to be deleted on this date
          example: 2024-03-26T10:25:26.274Z
          type: string
        frequency:
          $ref: '#/components/schemas/Frequency'
      type: object
    DateRange:
      properties:
        from:
          example: 2021-09-25T12:52:34.925
          type: string
        to:
          example: 2023-11-15T12:52:34.925
          type: string
      type: object
    HIUClientHealthInformationRequest:
      example:
        fromDate: 2024-03-26T10:25:26.274Z
        consentId: ff219ebf-1959-4514-9d28-839b677d6fc6
        requestId: a1s2c932-2f70-3ds3-a3b5-2sfd46b12a18d
        toDate: 2023-11-15T12:52:34.925
        expiry: 2024-03-26T10:25:26.274Z
      properties:
        requestId:
          example: a1s2c932-2f70-3ds3-a3b5-2sfd46b12a18d
          type: string
        consentId:
          description: The id of the consent which has been granted
          example: ff219ebf-1959-4514-9d28-839b677d6fc6
          type: string
        fromDate:
          example: 2024-03-26T10:25:26.274Z
          type: string
        toDate:
          example: 2023-11-15T12:52:34.925
          type: string
        expiry:
          example: 2024-03-26T10:25:26.274Z
          type: string
      required:
      - consentId
      - expiry
      - fromDate
      - requestId
      - toDate
      type: object
    HealthInformationResponse:
      example:
        decryptedHealthInformationEntries:
        - decryptedHealthInformationEntries
        - decryptedHealthInformationEntries
        error: error
        status: status
        httpStatusCode: httpStatusCode
      properties:
        status:
          type: string
        error:
          type: string
        httpStatusCode:
          type: string
        decryptedHealthInformationEntries:
          items:
            type: string
          type: array
      type: object
    HiTypeEnum:
      enum:
      - OPConsultation
      - Prescription
      - DischargeSummary
      - DiagnosticReport
      - ImmunizationRecord
      - HealthDocumentRecord
      - WellnessRecord
      type: string
    initConsent_request:
      properties:
        requestId:
          description: "a nonce, unique for each HTTP request."
          example: 499a5a4a-7dda-4f20-9b67-e24589627061
          type: string
        timestamp:
          example: 2024-02-13T20:18:35.094329Z
          type: string
        consent:
          $ref: '#/components/schemas/ConsentRequest'
      required:
      - requestId
      - timestamp
      type: object

